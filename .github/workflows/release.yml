name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            ext: ""
          - goos: linux
            goarch: arm64
            ext: ""
          - goos: darwin
            goarch: amd64
            ext: ""
          - goos: darwin
            goarch: arm64
            ext: ""
          - goos: windows
            goarch: amd64
            ext: ".exe"
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Build artifact
        run: |
          mkdir -p dist
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=0 \
            go build -o dist/copilot-api-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }} .

      - name: Package artifact
        run: |
          cd dist
          BINARY="copilot-api-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            ARCHIVE="copilot-api-${{ matrix.goos }}-${{ matrix.goarch }}.zip"
            zip -q "$ARCHIVE" "$BINARY"
          else
            ARCHIVE="copilot-api-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz"
            tar -czf "$ARCHIVE" "$BINARY"
          fi
          rm -f "$BINARY"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: copilot-api-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/copilot-api-${{ matrix.goos }}-${{ matrix.goarch }}.*

  release:
    name: Publish release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
